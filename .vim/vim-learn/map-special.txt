特殊参数：
1. <buffer>
2. <silent>
3. <special>
4. <script>
5. <expr>
6. <unique>

它们必须映射命令的后边，在其他任何参数的前面。

<buffer>如果这些映射命令的第一个参数是<buffer>，映射将只局限于当前缓冲区（也就是你此时正编辑的文件）内。比如：
:map <buffer> ,w /a<CR>
它的意思时在当前缓冲区里定义键绑定，“,w”将在当前缓冲区里查找字符a。同样你可以在其他缓冲区里定义：
:map <buffer> ,w /b<CR>
比如我经常打开多个标签(:tabedit)，想要在各自标签里定义",w"键绑定，那么你只要在每个标签页里分别定义就可，其作用域也只在各自的标签里。同样要清除这些缓冲区的键绑定也要加上<buffer>参数，比如：
:unmap <buffer> ,w
:mapclear <buffer>

<silent>是指执行键绑定时不在命令行上回显，比如：
:map <silent> ,w /abcd<CR>
你在输入,w查找abcd时，命令行上不会显示/abcd，如果没有<silent>参数就会显示出来

<special>一般用于定义特殊键怕有副作用的场合。比如：
:map <special> <F12> /Header<CR>

<unique>一般用于定义新的键映射或者缩写命令的同时检查是否该键已经被映射，如果该映射或者缩写已经存在，则该命令会失败

<expr>. 如果定义新映射的第一个参数是<expr>，那么参数会作为表达式来进行计算，结果使用实际使用的<rhs>，例如：
:inoremap <expr> . InsertDot()
这可以用来检查光标之前的文本并在一定条件下启动全能 (omni) 补全。
一个例子：
let counter = 0
inoremap <expr> <C-L> ListItem()
inoremap <expr> <C-R> ListReset()

func ListItem()
let g:counter += 1
return g:counter . '. '
endfunc

func ListReset()
let g:counter = 0
return ''
endfunc
在插入模式下，CTRL-L插入顺序的列表编号，并返回；CTRL-R复位列表编号到0，并返回空。


<Leader> mapleader
mapleader变量对所有map映射命令起效，它的作用是将参数<leader>替换成mapleader变量的值，比如：
:map <Leader>A oanother line<Esc>
如果mapleader变量没有设置，则用默认的反斜杠代替，因此这个映射等效于：
:map \A oanother line<Esc>
意思时输入\A键时，在下一行输入another line并返回到普通模式。
如果设置了mapleader变量，比如：
let mapleader = ","
那么就等效于：
:map ,A oanother line<Esc>

<LocalLeader> maplocalleader
<LocalLeader>和<Leader>类似，只不过它只作用于缓冲区。
因此在设置mapleader和maplocalleader时最好区分开，不要出现冲突。

大体上映射的主要部分已经都提到了，还有很多具体的映射相关的内容可以参见:help map
